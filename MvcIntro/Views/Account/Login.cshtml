@model MvcIntro.Models.ViewModel.UserLoginModel

@{
    ViewBag.Title = "Login";
}

<h2>Login</h2>

@if (ViewBag.Error != null)
{
    <div>
        @ViewBag.Error
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, labelText: "Email:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, labelText: "Password:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Login" class="btn btn-info" />
            </div>
        </div>
    </div>
}


@section scripts
{

    @if (Model != null && Model.Password != null)
    {
        <script>

            $('#Password').val(@Model.Password);

        </script>
    }

}

@section customCss
{
    <style>

        .myClass {
            background-color: beige;
        }
    </style>
}